include classpath("common.conf")

akka {
  actor {
    provider = "cluster"
    serialization-bindings {
      "com.loyalty.testing.s3.actor.model.CborSerializable" = jackson-cbor
    }
  }

  coordinated-shutdown {
    exit-jvm = on
  }

  cluster {
    min-nr-of-members = 1
    seed-nodes = [
      "akka://"${app.name}"@127.0.0.1:25520"
    ]
    //split-brain-resolver {
    //  active-strategy = keep-majority
    //  stable-after = 7s
    //}
    failure-detector {
      threshold = 12
    }
    // downing-provider-class = "com.lightbend.akka.sbr.SplitBrainResolverProvider"
    shutdown-after-unsuccessful-join-seed-nodes = 30s

    # Time margin after which shards or singletons that belonged to a downed/removed
    # partition are created in surviving partition. The purpose of this margin is that
    # in case of a network partition the persistent actors in the non-surviving partitions
    # must be stopped before corresponding persistent actors are started somewhere else.
    # This is useful if you implement downing strategies that handle network partitions,
    # e.g. by keeping the larger side of the partition and shutting down the smaller side.
    # It will not add any extra safety for auto-down-unreachable-after, since that is not
    # handling network partitions. If Split Brain Resolver is enabled the default value
    # of this property is equal to the value of
    # akka.cluster.split-brain-resolver.stable-after.
    # Disable with "off" or specify a duration to enable.
    down-removal-margin = 7s

    sharding {
      number-of-shards = 100
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp
      canonical {
        hostname = "127.0.0.1"
        port = 25520
      }
    }
  }
}
